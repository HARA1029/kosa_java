package june_19.class_;

public class Class_Class {

	public static void main(String[] args) {
		//26. 클래스의 기념
		//객체 지향 프로그래밍 : 모든 데이터를 객체로 취급
		// 상태, 행동을 구체화하는 형태의 프로그래밍
		// 객체를 만들어내기 위한 설계도 => 클래스
		
		//클래스
		//객체를 정의하는 틀 or 설계도 => 객체를 생성할 때 사용
		
		//인스턴스
		//선언된 해당 클래서 타입의 객체
		
		//메소드
		// 어떠한 특정작업을 수업하기 위한 명령문의 집합
		//접근제어자 반환타입 메소드이름(매개변수목록) { // 선언부
		//
		    // 구현부

		//}
		
		//27. 클래스의 구성
		//생성자 : 클래스 이름으로 된 함수
		//지역 변수 : 메소드 안에서만 사용 가능한 것
		
		//28. 클래스의 선언
		// 접근제어자 class 클래스이름 {
		//	    접근제어자 필드1의타입 필드1의이름;
		//	    접근제어자 필드2의타입 필드2의이름;
		//	    ...
		//	    접근제어자 메소드1의 원형
		//	    접근제어자 메소드2의 원형
		//	    ...
		//	};
		
		//새로 메모리를 할당 받아서 사용 
		//=> 객체참조변수 이름 = new 클래스이름();=> 할당 후 선언
		//클래스이름 객체참조변수이름 = new 클래스이름(); => 할당하면서 선언 
		}
}
